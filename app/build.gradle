plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
}

def secretsFile = rootProject.file("secrets.properties")
def googleApiKey = secretsFile.exists() ? new Properties().with { props ->
    secretsFile.withReader { reader -> props.load(reader) }
    props["GOOGLE_API_KEY"]
} : ""

android {
    namespace 'com.example.eco_charge_android'
    compileSdk 35
    android.buildFeatures.buildConfig true

    defaultConfig {
        applicationId "com.example.eco_charge_android"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        manifestPlaceholders = [googleApiKey: googleApiKey]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {
    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.activity
    implementation libs.androidx.constraintlayout
    implementation libs.retrofit
    implementation libs.retrofit.converter.gson
    implementation libs.play.services.maps
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
}

